local event = require("event.event")
local panthera = require("panthera.panthera")

local bindings = require("gui.bindings")

local BUTTON_ANIMATION = "/resources/animations/button.json"
local GUI_MAIN_ANIMATION = "/resources/animations/gui_main.json"
local HASH_TOUCH = hash("touch")
local HASH_LEFT = hash("key_left")
local HASH_RIGHT = hash("key_right")

---@class gui.main
---@field bindings gui.main.bindings
---@field text_node hash
---@field text_timer hash
---@field button_left hash
---@field button_right hash
---@field button_left_animation panthera.animation.state
---@field button_right_animation panthera.animation.state
---@field gui_main_animation panthera.animation.state
---@field is_running boolean
---@field current_timer number

---@class gui.main.bindings
---@field on_left event
---@field on_right event
---@field show_text event
---@field level_completed event


local function on_left(self, callback)
	panthera.play(self.button_left_animation, "click")
	self.bindings.on_left:trigger()
end


local function on_right(self, callback)
	panthera.play(self.button_right_animation, "click")
	self.bindings.on_right:trigger()
end


---@param self gui.main
function init(self)
	self.bindings = bindings.set({
		on_left = event.create(),
		on_right = event.create(),
		show_text = event.create(),
		level_completed = event.create()
	})

	self.text_node = gui.get_node("text_current_level")
	self.text_timer = gui.get_node("text_timer")
	self.button_left = gui.get_node("button_left/root")
	self.button_right = gui.get_node("button_right/root")

	self.gui_main_animation = panthera.create_gui(GUI_MAIN_ANIMATION) --[[@as panthera.animation.state]]

	self.button_left_animation = panthera.create_gui(BUTTON_ANIMATION, function(node_id)
		return gui.get_node("button_left/" .. node_id)
	end) --[[@as panthera.animation.state]]

	self.button_right_animation = panthera.create_gui(BUTTON_ANIMATION, function(node_id)
		return gui.get_node("button_right/" .. node_id)
	end) --[[@as panthera.animation.state]]

	self.is_running = false
	self.current_timer = 0

	self.bindings.show_text:subscribe(function(text)
		self.is_running = true
		self.current_timer = 0
		gui.set_text(self.text_node, text)

		panthera.play(self.gui_main_animation, "level_start", {
			is_skip_init = true
		})
	end)

	self.bindings.level_completed:subscribe(function()
		self.is_running = false

		panthera.play(self.gui_main_animation, "level_completed")
	end)

	msg.post(".", "acquire_input_focus")
end


---@param self gui.main
---@param action_id hash
---@param action action
function on_input(self, action_id, action)
	local is_consumed = false

	if action_id == HASH_TOUCH then
		if gui.pick_node(self.button_left, action.x, action.y) then
			is_consumed = true
			if action.pressed then
				on_left(self)
			end
		elseif gui.pick_node(self.button_right, action.x, action.y) then
			is_consumed = true
			if action.pressed then
				on_right(self)
			end
		end
	end

	if action_id == HASH_LEFT then
		is_consumed = true
		if action.pressed then
			on_left(self)
		end
	end

	if action_id == HASH_RIGHT then
		is_consumed = true
		if action.pressed then
			on_right(self)
		end
	end

	return is_consumed
end


function update(self, dt)
	if self.is_running then
		self.current_timer = self.current_timer + dt
		gui.set_text(self.text_timer, string.format("%.1f", self.current_timer))
	end
end